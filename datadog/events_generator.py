__author__ = 'fzhang'
# Configure the module according to your needs
import os, sys
import time


THRESHOLD=2*60*60

def get_last_file_mtime():
    """
    get the latest file in a dir/list and return its mtime in epochseconds
    :return:epochseconds
    """
    return time.time() -THRESHOLD


def pydog(difftime):
    from datadog import initialize
    from datadog import api  # Use Datadog REST API client

    options = {


    }

    initialize(**options)

    hostname = os.uname()[1]
    runuser = os.environ['USER']

    title = "Event generated by Python code: " + sys.argv[0]
    text = 'From host= %s runuser=%s' % (hostname, runuser)
    tags = ['version:1', 'PythonApp']

    api.Event.create(title=title, text=text, tags=tags)

# Use Statsd, a Python client for DogStatsd
    from datadog import statsd

    statsd.increment('LatestFileMtime')
    statsd.gauge('timeGap', difftime)

# Or ThreadStats, an alternative tool to collect and flush metrics, using Datadog REST API
#from datadog import ThreadStats
# See https://github.com/DataDog/datadogpy


if __name__=="__main__":


    lastfile_mtime=get_last_file_mtime()

    time.sleep(1)

    now=time.time()

    print now

    difftime= now- lastfile_mtime

    print difftime

    if difftime>THRESHOLD:
        pydog(1000*difftime)
